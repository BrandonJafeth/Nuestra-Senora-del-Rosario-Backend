// <auto-generated />
using System;
using Infrastructure.Persistence.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250217052722_Nueva Migra")]
    partial class NuevaMigra
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApplicationForm", b =>
                {
                    b.Property<int>("Id_ApplicationForm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_ApplicationForm"));

                    b.Property<int>("Age_AP")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Cedula_AP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianCedula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianLastName1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianLastName2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GuardianPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Id_Status")
                        .HasColumnType("int");

                    b.Property<string>("LastName1_AP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName2_AP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location_AP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name_AP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_ApplicationForm");

                    b.HasIndex("Id_Status");

                    b.ToTable("ApplicationForms");
                });

            modelBuilder.Entity("ApplicationStatus", b =>
                {
                    b.Property<int>("Id_Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Status"));

                    b.Property<string>("Status_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_Status");

                    b.ToTable("ApplicationStatuses");
                });

            modelBuilder.Entity("Domain.Entities.Administration.AdministrationRoute", b =>
                {
                    b.Property<int>("Id_AdministrationRoute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_AdministrationRoute"));

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id_AdministrationRoute");

                    b.ToTable("AdministrationRoutes", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Administration.Appointment", b =>
                {
                    b.Property<int>("Id_Appointment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Appointment"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Companion")
                        .HasColumnType("int");

                    b.Property<int>("Id_HC")
                        .HasColumnType("int");

                    b.Property<int>("Id_Resident")
                        .HasColumnType("int");

                    b.Property<int>("Id_Specialty")
                        .HasColumnType("int");

                    b.Property<int>("Id_StatusAP")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time(6)");

                    b.HasKey("Id_Appointment");

                    b.HasIndex("Id_Companion");

                    b.HasIndex("Id_HC");

                    b.HasIndex("Id_Specialty");

                    b.HasIndex("Id_StatusAP");

                    b.HasIndex("Id_Resident", "Date", "Time")
                        .IsUnique()
                        .HasDatabaseName("idx_unique_appointment");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Domain.Entities.Administration.AppointmentStatus", b =>
                {
                    b.Property<int>("Id_StatusAP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_StatusAP"));

                    b.Property<string>("Name_StatusAP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_StatusAP");

                    b.ToTable("AppointmentStatuses");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Deduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("PaymentReceiptId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentReceiptId")
                        .HasDatabaseName("IX_Deduction_PaymentReceiptId");

                    b.ToTable("Deductions");
                });

            modelBuilder.Entity("Domain.Entities.Administration.DependencyHistory", b =>
                {
                    b.Property<int>("Id_History")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_History"));

                    b.Property<int>("Id_DependencyLevel")
                        .HasColumnType("int");

                    b.Property<int>("Id_Resident")
                        .HasColumnType("int");

                    b.HasKey("Id_History");

                    b.HasIndex("Id_DependencyLevel");

                    b.HasIndex("Id_Resident");

                    b.ToTable("DependencyHistories");
                });

            modelBuilder.Entity("Domain.Entities.Administration.DependencyLevel", b =>
                {
                    b.Property<int>("Id_DependencyLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_DependencyLevel"));

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id_DependencyLevel");

                    b.ToTable("DependencyLevels");
                });

            modelBuilder.Entity("Domain.Entities.Administration.HealthcareCenter", b =>
                {
                    b.Property<int>("Id_HC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_HC"));

                    b.Property<string>("Location_HC")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name_HC")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type_HC")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_HC");

                    b.ToTable("HealthcareCenters");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("InventoryID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MovementType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryID");

                    b.HasIndex("ProductID");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Domain.Entities.Administration.MedicationSpecific", b =>
                {
                    b.Property<int>("Id_MedicamentSpecific")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_MedicamentSpecific"));

                    b.Property<string>("AdministrationSchedule")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Id_AdministrationRoute")
                        .HasColumnType("int");

                    b.Property<string>("Name_MedicamentSpecific")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SpecialInstructions")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("UnitOfMeasureID")
                        .HasColumnType("int");

                    b.HasKey("Id_MedicamentSpecific");

                    b.HasIndex("Id_AdministrationRoute");

                    b.HasIndex("UnitOfMeasureID");

                    b.ToTable("MedicationSpecifics", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Administration.Note", b =>
                {
                    b.Property<int>("Id_Note")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Note"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NoteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id_Note");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.Administration.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("Domain.Entities.Administration.PaymentReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Absence")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Adjustments")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("DoubleExtras")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("EmployeeDni")
                        .HasColumnType("int");

                    b.Property<decimal>("ExtraHourRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("GrossIncome")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Incapacity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("NightHours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("Overtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("TotalDeductions")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("TotalExtraHoursAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("VacationDays")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("WorkedDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDni", "PaymentDate")
                        .HasDatabaseName("IX_PaymentReceipt_EmployeeDni_PaymentDate");

                    b.ToTable("PaymentReceipts");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TotalQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnitOfMeasureID")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("UnitOfMeasureID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Resident", b =>
                {
                    b.Property<int>("Id_Resident")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Resident"));

                    b.Property<string>("Cedula_RD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Guardian")
                        .HasColumnType("int");

                    b.Property<int>("Id_Room")
                        .HasColumnType("int");

                    b.Property<string>("Lastname1_RD")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Lastname2_RD")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Location_RD")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name_RD")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Resident");

                    b.HasIndex("Id_Guardian");

                    b.HasIndex("Id_Room");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("Domain.Entities.Administration.ResidentMedication", b =>
                {
                    b.Property<int>("Id_ResidentMedication")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_ResidentMedication"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_MedicamentSpecific")
                        .HasColumnType("int");

                    b.Property<int>("Id_Resident")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PrescribedDose")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id_ResidentMedication");

                    b.HasIndex("Id_MedicamentSpecific");

                    b.HasIndex("Id_Resident");

                    b.ToTable("ResidentMedications", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Administration.Room", b =>
                {
                    b.Property<int>("Id_Room")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Room"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id_Room");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Specialty", b =>
                {
                    b.Property<int>("Id_Specialty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Specialty"));

                    b.Property<string>("Name_Specialty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Specialty");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("Domain.Entities.Administration.UnitOfMeasure", b =>
                {
                    b.Property<int>("UnitOfMeasureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UnitOfMeasureID"));

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UnitOfMeasureID");

                    b.ToTable("UnitOfMeasures");
                });

            modelBuilder.Entity("Domain.Entities.Informative.AboutUsSection", b =>
                {
                    b.Property<int>("Id_About_Us")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_About_Us"));

                    b.Property<string>("MissionDescription_About_US")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MissionTitle_About_US")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Subtitle_About_Us")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VisionDescription_About_US")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VisionTitle_About_US")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_About_Us");

                    b.ToTable("AboutUsSections");
                });

            modelBuilder.Entity("Domain.Entities.Informative.AdministrativeRequirements", b =>
                {
                    b.Property<int>("Id_AdministrativeRequirement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_AdministrativeRequirement"));

                    b.Property<string>("Description_AR")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_AdministrativeRequirement");

                    b.ToTable("AdministrativeRequirements");
                });

            modelBuilder.Entity("Domain.Entities.Informative.AssociatesSection", b =>
                {
                    b.Property<int>("Id_AssociatesSection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_AssociatesSection"));

                    b.Property<string>("ContactText_AS")
                        .HasColumnType("longtext");

                    b.Property<string>("Description_AS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image_AS_Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("QuestionTitle_AS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_AssociatesSection");

                    b.ToTable("AssociatesSections");
                });

            modelBuilder.Entity("Domain.Entities.Informative.ButtonInfo", b =>
                {
                    b.Property<int>("Id_ButtonInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_ButtonInfo"));

                    b.Property<string>("ButtonText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_ButtonInfo");

                    b.ToTable("ButtonInfos");
                });

            modelBuilder.Entity("Domain.Entities.Informative.Contact", b =>
                {
                    b.Property<int>("Id_Contact")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Contact"));

                    b.Property<string>("Contact_title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Contact_url")
                        .HasColumnType("longtext");

                    b.HasKey("Id_Contact");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Domain.Entities.Informative.DonationType", b =>
                {
                    b.Property<int>("Id_DonationType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_DonationType"));

                    b.Property<string>("Name_DonationType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_DonationType");

                    b.ToTable("DonationTypes");
                });

            modelBuilder.Entity("Domain.Entities.Informative.DonationsSection", b =>
                {
                    b.Property<int>("Id_DonationsSection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_DonationsSection"));

                    b.Property<string>("Description_Donations")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Donations_MoreInfoPrompt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_DonationsSection");

                    b.ToTable("DonationsSections");
                });

            modelBuilder.Entity("Domain.Entities.Informative.FormDonation", b =>
                {
                    b.Property<int>("Id_FormDonation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_FormDonation"));

                    b.Property<DateTime>("Delivery_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Dn_Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Dn_Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Dn_Lastname1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Dn_Lastname2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Dn_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Dn_Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Id_DonationType")
                        .HasColumnType("int");

                    b.Property<int>("Id_MethodDonation")
                        .HasColumnType("int");

                    b.Property<int>("Id_Status")
                        .HasColumnType("int");

                    b.HasKey("Id_FormDonation");

                    b.HasIndex("Id_DonationType");

                    b.HasIndex("Id_MethodDonation");

                    b.HasIndex("Id_Status");

                    b.ToTable("FormDonations");
                });

            modelBuilder.Entity("Domain.Entities.Informative.GalleryCategory", b =>
                {
                    b.Property<int>("Id_GalleryCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_GalleryCategory"));

                    b.Property<string>("Name_Gallery_Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_GalleryCategory");

                    b.ToTable("GalleryCategories");
                });

            modelBuilder.Entity("Domain.Entities.Informative.GalleryItem", b =>
                {
                    b.Property<int>("Id_GalleryItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_GalleryItem"));

                    b.Property<string>("Gallery_Image_Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Id_GalleryCategory")
                        .HasColumnType("int");

                    b.HasKey("Id_GalleryItem");

                    b.HasIndex("Id_GalleryCategory");

                    b.ToTable("GalleryItems");
                });

            modelBuilder.Entity("Domain.Entities.Informative.HeroSection", b =>
                {
                    b.Property<int>("Id_Hero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Hero"));

                    b.Property<string>("HeroImage_Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Hero_Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Subtitle_Hero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Hero");

                    b.ToTable("HeroSections");
                });

            modelBuilder.Entity("Domain.Entities.Informative.ImportantInformation", b =>
                {
                    b.Property<int>("Id_ImportantInformation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_ImportantInformation"));

                    b.Property<string>("Description_ImportantInformation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_ImportantInformation");

                    b.ToTable("ImportantInformation");
                });

            modelBuilder.Entity("Domain.Entities.Informative.MethodDonation", b =>
                {
                    b.Property<int>("Id_MethodDonation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_MethodDonation"));

                    b.Property<int>("DonationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name_MethodDonation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_MethodDonation");

                    b.HasIndex("DonationTypeId");

                    b.ToTable("MethodDonations");
                });

            modelBuilder.Entity("Domain.Entities.Informative.NavbarItem", b =>
                {
                    b.Property<int>("Id_Nav_It")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Nav_It"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Order_Item_Nav")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Title_Nav")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UrlNav")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Nav_It");

                    b.HasIndex("ParentId");

                    b.ToTable("NavbarItems");
                });

            modelBuilder.Entity("Domain.Entities.Informative.NursingRequirements", b =>
                {
                    b.Property<int>("Id_NursingRequirement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_NursingRequirement"));

                    b.Property<string>("Description_NR")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_NursingRequirement");

                    b.ToTable("NursingRequirements");
                });

            modelBuilder.Entity("Domain.Entities.Informative.RegistrationSection", b =>
                {
                    b.Property<int>("Id_RegistrationSection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_RegistrationSection"));

                    b.Property<string>("RegistrationImage_Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Registration_MoreInfoPrompt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Registration_SupportMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_RegistrationSection");

                    b.ToTable("RegistrationSections");
                });

            modelBuilder.Entity("Domain.Entities.Informative.ServiceSection", b =>
                {
                    b.Property<int>("Id_ServiceSection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_ServiceSection"));

                    b.Property<string>("Description_Card_SV")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image_Card_SV_Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title_Card_SV")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_ServiceSection");

                    b.ToTable("ServiceSections");
                });

            modelBuilder.Entity("Domain.Entities.Informative.SiteSettings", b =>
                {
                    b.Property<int>("Id_Site_Settings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Site_Settings"));

                    b.Property<string>("Icon_HGA_Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SiteTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Site_Settings");

                    b.ToTable("SiteSettings");
                });

            modelBuilder.Entity("Domain.Entities.Informative.Status", b =>
                {
                    b.Property<int>("Id_Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Status"));

                    b.Property<string>("Status_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Status");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Domain.Entities.Informative.TitleSection", b =>
                {
                    b.Property<int>("Id_TitleSection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_TitleSection"));

                    b.Property<string>("Description_Section")
                        .HasColumnType("longtext");

                    b.Property<string>("Title_Text_Section")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_TitleSection");

                    b.ToTable("TitleSections");
                });

            modelBuilder.Entity("Domain.Entities.Informative.VoluntarieType", b =>
                {
                    b.Property<int>("Id_VoluntarieType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_VoluntarieType"));

                    b.Property<string>("Name_VoluntarieType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_VoluntarieType");

                    b.ToTable("VoluntarieTypes");
                });

            modelBuilder.Entity("Domain.Entities.Informative.VolunteerProfile", b =>
                {
                    b.Property<int>("Id_Volunteer_Profile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Volunteer_Profile"));

                    b.Property<string>("Description_Volunteer_Profile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tittle_Volunteer_Profile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Volunteer_Profile");

                    b.ToTable("VolunteerProfiles");
                });

            modelBuilder.Entity("Domain.Entities.Informative.VolunteeringSection", b =>
                {
                    b.Property<int>("Id_VolunteeringSection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_VolunteeringSection"));

                    b.Property<string>("Description_Card_VT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image_Card_VT_Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title_Card_VT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_VolunteeringSection");

                    b.ToTable("VolunteeringSections");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Property<int>("Id_Employee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Employee"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Emergency_Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Id_Profession")
                        .HasColumnType("int");

                    b.Property<int>("Id_TypeOfSalary")
                        .HasColumnType("int");

                    b.Property<string>("Last_Name1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Last_Name2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Employee");

                    b.HasIndex("Id_Profession");

                    b.HasIndex("Id_TypeOfSalary");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("FormVoluntarie", b =>
                {
                    b.Property<int>("Id_FormVoluntarie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_FormVoluntarie"));

                    b.Property<DateTime>("Delivery_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Status")
                        .HasColumnType("int");

                    b.Property<int>("Id_VoluntarieType")
                        .HasColumnType("int");

                    b.Property<int>("Vn_Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Vn_Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Vn_Lastname1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Vn_Lastname2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Vn_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Vn_Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_FormVoluntarie");

                    b.HasIndex("Id_Status");

                    b.HasIndex("Id_VoluntarieType");

                    b.ToTable("FormVoluntaries");
                });

            modelBuilder.Entity("Guardian", b =>
                {
                    b.Property<int>("Id_Guardian")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Guardian"));

                    b.Property<string>("Cedula_GD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email_GD")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Lastname1_GD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Lastname2_GD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name_GD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone_GD")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id_Guardian");

                    b.ToTable("Guardians");
                });

            modelBuilder.Entity("Profession", b =>
                {
                    b.Property<int>("Id_Profession")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Profession"));

                    b.Property<string>("Name_Profession")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Profession");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("Rol", b =>
                {
                    b.Property<int>("Id_Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Role"));

                    b.Property<string>("Name_Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Role");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TypeOfSalary", b =>
                {
                    b.Property<int>("Id_TypeOfSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_TypeOfSalary"));

                    b.Property<string>("Name_TypeOfSalary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_TypeOfSalary");

                    b.ToTable("TypeOfSalaries");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_User"));

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PasswordExpiration")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<int>("Id_Role")
                        .HasColumnType("int");

                    b.HasKey("Id_User", "Id_Role");

                    b.HasIndex("Id_Role");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ApplicationForm", b =>
                {
                    b.HasOne("ApplicationStatus", "ApplicationStatus")
                        .WithMany()
                        .HasForeignKey("Id_Status")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationStatus");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Appointment", b =>
                {
                    b.HasOne("Employee", "Companion")
                        .WithMany("CompanionAppointments")
                        .HasForeignKey("Id_Companion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Administration.HealthcareCenter", "HealthcareCenter")
                        .WithMany("Appointments")
                        .HasForeignKey("Id_HC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Administration.Resident", "Resident")
                        .WithMany("Appointments")
                        .HasForeignKey("Id_Resident")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Administration.Specialty", "Specialty")
                        .WithMany("Appointments")
                        .HasForeignKey("Id_Specialty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Administration.AppointmentStatus", "AppointmentStatus")
                        .WithMany("Appointments")
                        .HasForeignKey("Id_StatusAP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppointmentStatus");

                    b.Navigation("Companion");

                    b.Navigation("HealthcareCenter");

                    b.Navigation("Resident");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Deduction", b =>
                {
                    b.HasOne("Domain.Entities.Administration.PaymentReceipt", "PaymentReceipt")
                        .WithMany("DeductionsList")
                        .HasForeignKey("PaymentReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentReceipt");
                });

            modelBuilder.Entity("Domain.Entities.Administration.DependencyHistory", b =>
                {
                    b.HasOne("Domain.Entities.Administration.DependencyLevel", "DependencyLevel")
                        .WithMany()
                        .HasForeignKey("Id_DependencyLevel")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Administration.Resident", "Resident")
                        .WithMany("DependencyHistories")
                        .HasForeignKey("Id_Resident")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DependencyLevel");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Inventory", b =>
                {
                    b.HasOne("Domain.Entities.Administration.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Administration.MedicationSpecific", b =>
                {
                    b.HasOne("Domain.Entities.Administration.AdministrationRoute", "AdministrationRoute")
                        .WithMany("MedicationSpecifics")
                        .HasForeignKey("Id_AdministrationRoute")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Administration.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany("MedicationsSpecific")
                        .HasForeignKey("UnitOfMeasureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdministrationRoute");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Notification", b =>
                {
                    b.HasOne("Domain.Entities.Administration.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.Administration.PaymentReceipt", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithMany("PaymentReceipts")
                        .HasForeignKey("EmployeeDni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Product", b =>
                {
                    b.HasOne("Domain.Entities.Administration.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Administration.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany("Products")
                        .HasForeignKey("UnitOfMeasureID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Resident", b =>
                {
                    b.HasOne("Guardian", "Guardian")
                        .WithMany()
                        .HasForeignKey("Id_Guardian")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Administration.Room", "Room")
                        .WithMany()
                        .HasForeignKey("Id_Room")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guardian");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Domain.Entities.Administration.ResidentMedication", b =>
                {
                    b.HasOne("Domain.Entities.Administration.MedicationSpecific", "MedicationSpecific")
                        .WithMany("ResidentMedications")
                        .HasForeignKey("Id_MedicamentSpecific")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Administration.Resident", "Resident")
                        .WithMany("ResidentMedications")
                        .HasForeignKey("Id_Resident")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicationSpecific");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("Domain.Entities.Informative.FormDonation", b =>
                {
                    b.HasOne("Domain.Entities.Informative.DonationType", "DonationType")
                        .WithMany("FormDonations")
                        .HasForeignKey("Id_DonationType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Informative.MethodDonation", "MethodDonation")
                        .WithMany("FormDonations")
                        .HasForeignKey("Id_MethodDonation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Informative.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Id_Status")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonationType");

                    b.Navigation("MethodDonation");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Domain.Entities.Informative.GalleryItem", b =>
                {
                    b.HasOne("Domain.Entities.Informative.GalleryCategory", "GalleryCategory")
                        .WithMany("GalleryItems")
                        .HasForeignKey("Id_GalleryCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GalleryCategory");
                });

            modelBuilder.Entity("Domain.Entities.Informative.MethodDonation", b =>
                {
                    b.HasOne("Domain.Entities.Informative.DonationType", "DonationType")
                        .WithMany("MethodDonations")
                        .HasForeignKey("DonationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonationType");
                });

            modelBuilder.Entity("Domain.Entities.Informative.NavbarItem", b =>
                {
                    b.HasOne("Domain.Entities.Informative.NavbarItem", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.HasOne("Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("Id_Profession")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TypeOfSalary", "TypeOfSalary")
                        .WithMany()
                        .HasForeignKey("Id_TypeOfSalary")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Profession");

                    b.Navigation("TypeOfSalary");
                });

            modelBuilder.Entity("FormVoluntarie", b =>
                {
                    b.HasOne("Domain.Entities.Informative.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Id_Status")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Informative.VoluntarieType", "VoluntarieType")
                        .WithMany("FormVoluntaries")
                        .HasForeignKey("Id_VoluntarieType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("VoluntarieType");
                });

            modelBuilder.Entity("UserRoles", b =>
                {
                    b.HasOne("Rol", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("Id_Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Administration.AdministrationRoute", b =>
                {
                    b.Navigation("MedicationSpecifics");
                });

            modelBuilder.Entity("Domain.Entities.Administration.AppointmentStatus", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Entities.Administration.HealthcareCenter", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Domain.Entities.Administration.MedicationSpecific", b =>
                {
                    b.Navigation("ResidentMedications");
                });

            modelBuilder.Entity("Domain.Entities.Administration.PaymentReceipt", b =>
                {
                    b.Navigation("DeductionsList");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Product", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Resident", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("DependencyHistories");

                    b.Navigation("ResidentMedications");
                });

            modelBuilder.Entity("Domain.Entities.Administration.Specialty", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Domain.Entities.Administration.UnitOfMeasure", b =>
                {
                    b.Navigation("MedicationsSpecific");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Entities.Informative.DonationType", b =>
                {
                    b.Navigation("FormDonations");

                    b.Navigation("MethodDonations");
                });

            modelBuilder.Entity("Domain.Entities.Informative.GalleryCategory", b =>
                {
                    b.Navigation("GalleryItems");
                });

            modelBuilder.Entity("Domain.Entities.Informative.MethodDonation", b =>
                {
                    b.Navigation("FormDonations");
                });

            modelBuilder.Entity("Domain.Entities.Informative.NavbarItem", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Domain.Entities.Informative.VoluntarieType", b =>
                {
                    b.Navigation("FormVoluntaries");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Navigation("CompanionAppointments");

                    b.Navigation("PaymentReceipts");
                });

            modelBuilder.Entity("Rol", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
